{"version":3,"sources":["components/posts/ListComment.js","components/posts/Comment.js","components/posts/Post.js","components/profile/ViewPic.js","components/profile/UploadImage.js","components/profile/Profile.js"],"names":["useStyles","makeStyles","theme","root","display","margin","spacing","comment","width","height","ListComment","classes","React","useState","commentUser","setCommentUser","useEffect","firestore","collection","doc","data","userUid","get","then","user","Avatar","className","alt","src","picUrl","displayName","Comment","post","currentUser","useContext","UserContext","viewComments","setViewComments","setComment","comments","setComments","postingComment","setPostingComment","id","orderBy","onSnapshot","_comments","forEach","push","onClick","map","cm","key","type","name","value","onChange","e","target","placeholder","autoComplete","preventDefault","length","add","uid","createdAt","firebase","FieldValue","serverTimestamp","res","catch","err","console","error","CircularProgress","size","color","fontSize","small","Post","postUser","setPostUser","imgOnLoadComplete","setImgOnLoadComplete","username","postUserPicUrl","postUrl","onLoad","postThumbnailUrl","style","opacity","caption","ViewPic","clickedLeft","clickedRight","close","picData","UploadImage","props","handleFileInput","files","reader","FileReader","addEventListener","setState","file","result","cropper","Cropper","imageElement","current","zoomable","scalable","aspectRatio","crop","canvas","getCroppedCanvas","imageDestination","toDataURL","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","output","readAsDataURL","handleUpload","imgFile","thumbnailFile","storageRef","storageRefThumbnail","uploadProfile","storage","ref","thumbnailName","uploadTask","thumbnailUploadtask","put","on","snapshot","progress","bytesTransferred","totalBytes","log","getDownloadURL","downloadURL","update","uploading","setViewUploader","thumbnailUrl","state","compressImagesBerforeUpload","options","optionThumbnail","getFilefromDataUrl","outputThumbnail","triggerClick","fileRef","click","createRef","Date","now","this","hidden","LinearProgress","variant","disabled","Component","pic","marginLeft","Profile","viewPic","setViewPic","viewUploader","photos","setPhotos","loading","setLoading","setUploadProfile","where","querySnapshot","_photos","to","email","i","index"],"mappings":"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","file":"static/js/4.422de64f.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { firestore } from '../../components/firebase';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    comment: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nfunction ListComment({ comment }) {\r\n\r\n    const classes = useStyles();\r\n    const [commentUser, setCommentUser] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"list useeffect\")\r\n        firestore.collection('users').doc(comment.data.userUid).get().then(user => {\r\n            setCommentUser({\r\n                user: user.data()\r\n            });\r\n        });\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <li>\r\n            <Avatar className={classes.comment} alt=\"user\" src={commentUser?.user?.picUrl} />\r\n            <span className=\"post__comment__user\">{commentUser?.user?.displayName}</span>\r\n            <span className=\"comment\">{comment.data.comment}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListComment\r\n","import React, { useEffect, useContext } from 'react'\r\nimport './Comment.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { firestore } from '../../components/firebase';\r\nimport firebase from \"firebase/app\";\r\nimport { UserContext } from '../../components/UserContext';\r\nimport ListComment from './ListComment';\r\n\r\nfunction Comment({ post }) {\r\n    // console.log(\"comment\")\r\n\r\n    const { currentUser } = useContext(UserContext);\r\n\r\n    const [viewComments, setViewComments] = React.useState(false);\r\n    const [comment, setComment] = React.useState('');\r\n    const [comments, setComments] = React.useState([]);\r\n    const [postingComment, setPostingComment] = React.useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setComment('');\r\n        // console.log(\"comment useeffect\")\r\n        firestore.collection('posts').doc(post.id).collection('comments').orderBy('createdAt', 'desc').onSnapshot(data => {\r\n            var _comments = [];\r\n            data.forEach(doc => {\r\n                _comments.push({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })\r\n            });\r\n            setComments(_comments)\r\n            // console.log(_comments);\r\n        });\r\n    }, [post])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (comment.length > 0) {\r\n            setPostingComment(true);\r\n            firestore.collection('posts').doc(post.id).collection('comments').add({\r\n                userUid: currentUser.uid,\r\n                comment: comment,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n            }).then(res => {\r\n                setPostingComment(false);\r\n                setComment('')\r\n            }).catch(err => {\r\n                setPostingComment(false);\r\n                setComment('')\r\n                console.error(\"Error adding document: \", err);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"comments\">\r\n                {viewComments &&\r\n                    <ul className=\"all__comments\">\r\n                        <li>\r\n                            <span className=\"comments__head\">Comments</span>\r\n                            <span onClick={() => setViewComments(!viewComments)} className=\"comment__close\">\r\n                                <CloseIcon />\r\n                            </span>\r\n                        </li>\r\n\r\n                        {comments.map(cm => <ListComment key={cm.id} comment={cm} />)}\r\n                    </ul>\r\n                }\r\n                {viewComments ? '' : <p className=\"view__comments\" onClick={() => setViewComments(!viewComments)}>View all comments</p>}\r\n            </div>\r\n            <div className=\"user__comment\">\r\n                <form>\r\n                    <input type=\"text\" name=\"comment\" id=\"comment\" value={comment} onChange={(e) => setComment(e.target.value)} placeholder=\"Type comment here...\" autoComplete=\"off\" />\r\n                    <button type=\"submit\" onClick={handleSubmit}>\r\n                        {postingComment ?\r\n                            <CircularProgress size={24} color=\"inherit\" />\r\n                            :\r\n                            <SendIcon fontSize=\"small\" color=\"action\" />\r\n                        }\r\n\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Posts.css\";\r\nimport Comment from \"./Comment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { firestore } from \"../../components/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction Post({ post }) {\r\n  const [postUser, setPostUser] = React.useState(null);\r\n  const [imgOnLoadComplete, setImgOnLoadComplete] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(post.data.userUid)\r\n      .get()\r\n      .then((doc) => {\r\n        setPostUser({\r\n          username: doc.data().username,\r\n          postUserPicUrl: doc.data().picUrl,\r\n        });\r\n      });\r\n  }, [post.id]);\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      <div className=\"post__head\">\r\n        <Avatar\r\n          className={classes.small}\r\n          alt={postUser?.username}\r\n          src={postUser?.postUserPicUrl}\r\n        />\r\n        <span className=\"post__username\">{postUser?.username}</span>\r\n      </div>\r\n      <div className=\"postImg__container\">\r\n        <img\r\n          src={post.data.postUrl}\r\n          onLoad={setImgOnLoadComplete}\r\n          alt=\"post-img\"\r\n          className=\"post__img\"\r\n        />\r\n        <img\r\n          src={post.data.postThumbnailUrl}\r\n          alt=\"post-thumbnail\"\r\n          {...(imgOnLoadComplete && { style: { opacity: \"0\" } })}\r\n          className=\"post__thumbnail\"\r\n        />\r\n      </div>\r\n      <p className=\"post__caption\">\r\n        <span className=\"post__user\">{postUser?.username}</span>\r\n        <span>{post.data.caption}</span>\r\n      </p>\r\n      <Comment post={post} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport './ViewPic.css'\r\nimport Post from '../posts/Post'\r\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ChevronRightRoundedIcon from '@material-ui/icons/ChevronRightRounded';\r\n\r\nfunction ViewPic({ clickedLeft, clickedRight, close, picData }) {\r\n    return (\r\n        <div className=\"view__pic\">\r\n            <div className=\"viewpic__close\" onClick={() => close(null)}>\r\n                <CloseIcon fontSize='large' />\r\n            </div>\r\n            <div className=\"left__chivron\" onClick={clickedLeft}>\r\n                <ChevronLeftRoundedIcon fontSize='large' />\r\n            </div>\r\n            <Post post={picData} />\r\n            <div className=\"right__chivron\" onClick={clickedRight}>\r\n                <ChevronRightRoundedIcon fontSize='large' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPic\r\n","import React from 'react'\r\nimport './UploadImage.css'\r\nimport Cropper from 'cropperjs';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { firestore, storage } from '../../components/firebase';\r\nimport firebase from \"firebase/app\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PublishRoundedIcon from '@material-ui/icons/PublishRounded';\r\nimport imageCompression from 'browser-image-compression';\r\n\r\n\r\nclass UploadImage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            imageDestination: \"\",\r\n            file: null,\r\n            caption: '',\r\n            progress: 0,\r\n            uploading: false\r\n        }\r\n        this.imageElement = React.createRef();\r\n        this.fileRef = React.createRef()\r\n\r\n        if (this.props.uploadProfile)\r\n            this.name = '' + this.props.currentUser.uid\r\n        else {\r\n            this.name = '' + this.props.currentUser.uid + '-' + Date.now();\r\n            this.thumbnailName = '' + this.props.currentUser.uid + '-' + Date.now() + \"-thumbnail\"\r\n        }\r\n\r\n    }\r\n\r\n    handleFileInput = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                this.setState({ file: reader.result });\r\n\r\n                const cropper = new Cropper(this.imageElement.current, {\r\n                    zoomable: false,\r\n                    scalable: false,\r\n                    aspectRatio: 1,\r\n                    crop: () => {\r\n                        const canvas = cropper.getCroppedCanvas();\r\n                        this.setState({ imageDestination: canvas.toDataURL('image/jpg') });\r\n                    }\r\n                })\r\n            });\r\n\r\n            const fileOptions = {\r\n                maxSizeMB: .5,\r\n                maxWidthOrHeight: 640,\r\n                useWebWorker: true\r\n            }\r\n            imageCompression(e.target.files[0], fileOptions).then((output) => {\r\n                reader.readAsDataURL(output);\r\n            })\r\n        }\r\n    }\r\n\r\n    handleUpload = (imgFile, thumbnailFile = null) => {\r\n\r\n        // storage refs\r\n        let storageRef = null;\r\n        let storageRefThumbnail = null;\r\n        if (this.props.uploadProfile)\r\n            storageRef = storage.ref(`users/${this.name}`);\r\n        else {\r\n            storageRef = storage.ref(`posts/${this.name}/${this.name}`);\r\n            storageRefThumbnail = storage.ref(`posts/${this.name}/${this.thumbnailName}`);\r\n        }\r\n\r\n        // upload tasks\r\n        let uploadTask = null;\r\n        let thumbnailUploadtask = null;\r\n        if (!thumbnailFile && this.props.uploadProfile) {\r\n            uploadTask = storageRef.put(imgFile);\r\n        } else {\r\n            uploadTask = storageRef.put(imgFile);\r\n            thumbnailUploadtask = storageRefThumbnail.put(thumbnailFile);\r\n        }\r\n\r\n        uploadTask.on('state_changed', (snapshot) => {\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            this.setState({ progress: progress });\r\n        }, function (error) {\r\n            // Handle unsuccessful uploads\r\n            console.log(\"error in upload\")\r\n        }, () => {\r\n\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                if (this.props.uploadProfile) {\r\n                    firestore.collection('users').doc(this.props.currentUser.uid).update({\r\n                        picUrl: downloadURL\r\n                    }).then(res => {\r\n                        this.setState({ uploading: false })\r\n                        this.props.setViewUploader(false)\r\n                    }).catch(err => {\r\n                        this.setState({ uploading: false })\r\n                    })\r\n                } else {\r\n                    thumbnailUploadtask.snapshot.ref.getDownloadURL().then(thumbnailUrl => {\r\n\r\n                        firestore.collection('posts').add({\r\n                            userUid: this.props.currentUser.uid,\r\n                            postUrl: downloadURL,\r\n                            postThumbnailUrl: thumbnailUrl,\r\n                            caption: this.state.caption,\r\n                            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n                        }).then(res => {\r\n                            this.setState({ uploading: false })\r\n                            this.props.setViewUploader(false)\r\n                        }).catch(err => {\r\n                            this.setState({ uploading: false })\r\n                        })\r\n                    })\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    compressImagesBerforeUpload = () => {\r\n        this.setState({ uploading: true })\r\n        let options = null;\r\n        let optionThumbnail = null;\r\n\r\n        if (this.props.uploadProfile) {\r\n            options = {\r\n                maxSizeMB: .1,\r\n                maxWidthOrHeight: 100,\r\n                useWebWorker: true\r\n            }\r\n        }\r\n        else {\r\n            optionThumbnail = {\r\n                maxSizeMB: .05,\r\n                maxWidthOrHeight: 20,\r\n                useWebWorker: true\r\n            }\r\n            options = {\r\n                maxSizeMB: .4,\r\n                maxWidthOrHeight: 640,\r\n                useWebWorker: true\r\n            }\r\n        }\r\n        imageCompression.getFilefromDataUrl(this.state.imageDestination, \"file.jpg\").then(file => {\r\n            imageCompression(file, options).then((output) => {\r\n                if (optionThumbnail) {\r\n                    imageCompression(file, optionThumbnail).then(outputThumbnail => {\r\n                        this.handleUpload(output, outputThumbnail);\r\n                    })\r\n                } else {\r\n                    this.handleUpload(output);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    triggerClick = () => {\r\n        this.fileRef.current.click()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"upload__image\" >\r\n                <div className=\"upload__img\">\r\n                    {this.state.file ?\r\n                        <div className=\"cropper\">\r\n                            <img ref={this.imageElement} src={this.state.file} alt=\"upload\" />\r\n                        </div>\r\n                        :\r\n                        <><input type=\"file\" hidden name=\"image\" id=\"image\" ref={this.fileRef} onChange={this.handleFileInput} />\r\n                            <h3 onClick={this.triggerClick}>Choose file</h3></>\r\n                    }\r\n\r\n                </div>\r\n\r\n                <LinearProgress variant=\"determinate\" value={this.state.progress} />\r\n                <div className=\"caption__input\">\r\n                    <input type=\"text\" name=\"caption\" id=\"caption\" value={this.state.caption} onChange={e => this.setState({ caption: e.target.value })} placeholder=\"caption\" autoComplete=\"off\" />\r\n                    <button className=\"upload__button\" disabled={!this.state.file} onClick={this.compressImagesBerforeUpload}>\r\n                        {this.state.uploading ?\r\n                            <CircularProgress size={20} color=\"inherit\" />\r\n                            :\r\n                            <PublishRoundedIcon color=\"action\" />\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <button className=\"cancel__button\" onClick={() => this.props.setViewUploader(false)}>Cancel</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadImage\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./Profile.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport PublishRoundedIcon from \"@material-ui/icons/PublishRounded\";\r\nimport ViewPic from \"./ViewPic\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport { UserContext } from \"../../components/UserContext\";\r\nimport { firestore } from \"../../components/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  pic: {\r\n    width: theme.spacing(14),\r\n    height: theme.spacing(14),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Profile() {\r\n  const classes = useStyles();\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const [viewPic, setViewPic] = React.useState(null);\r\n  const [viewUploader, setViewUploader] = React.useState(false);\r\n  const [photos, setPhotos] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [uploadProfile, setUploadProfile] = React.useState(false);\r\n\r\n  const clickedLeft = () => {\r\n    // console.log(\"clicked left\");\r\n    photos.forEach((value, index) => {\r\n      if (value.id === viewPic.id) {\r\n        if (index === 0) {\r\n          var i = photos.length - 1;\r\n          setViewPic(photos[i]);\r\n        } else {\r\n          setViewPic(photos[index - 1]);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const clickedRight = () => {\r\n    // console.log(\"clicked right\");\r\n    photos.forEach((value, index) => {\r\n      if (value.id === viewPic.id) {\r\n        if (index === photos.length - 1) {\r\n          setViewPic(photos[0]);\r\n        } else {\r\n          setViewPic(photos[index + 1]);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleProfilePicUpload = () => {\r\n    setUploadProfile(true);\r\n    setViewUploader(true);\r\n  };\r\n  const handlePostUpload = () => {\r\n    setUploadProfile(false);\r\n    setViewUploader(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"run\")\r\n    firestore\r\n      .collection(\"posts\")\r\n      .where(\"userUid\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        setLoading(false);\r\n        var _photos = [];\r\n        querySnapshot.forEach((doc) => {\r\n          _photos.push({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          });\r\n        });\r\n        setPhotos(_photos);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  }, [viewUploader]);\r\n\r\n  return (\r\n    <div className=\"profile__container\">\r\n      <div className=\"profile__close\">\r\n        <Link to=\"/posts\">\r\n          <CloseIcon fontSize=\"large\" style={{ color: \"#000000\" }} />\r\n        </Link>\r\n      </div>\r\n      <Avatar\r\n        className={classes.pic}\r\n        onClick={handleProfilePicUpload}\r\n        alt=\"user\"\r\n        src={currentUser.picUrl}\r\n      />\r\n      <p className=\"username\">{currentUser.username}</p>\r\n      <p className=\"email\">{currentUser.email}</p>\r\n      <div className=\"gallery\">\r\n        <h5>\r\n          Gallery{\" \"}\r\n          <span onClick={handlePostUpload}>\r\n            Upload <PublishRoundedIcon />\r\n          </span>\r\n        </h5>\r\n        {photos.length > 0 && (\r\n          <div className=\"photos\">\r\n            {photos.map((i) => (\r\n              <div key={i.id} className=\"photo\" onClick={() => setViewPic(i)}>\r\n                <img src={i.data.postUrl} alt={i.id} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {loading && (\r\n          <div className=\"loading_photos\">\r\n            <CircularProgress size={50} color=\"inherit\" />\r\n          </div>\r\n        )}\r\n        {photos.length === 0 && !loading && (\r\n          <h3 className=\"no__photos\">No Photos</h3>\r\n        )}\r\n      </div>\r\n      {viewPic && (\r\n        <ViewPic\r\n          close={setViewPic}\r\n          picData={viewPic}\r\n          clickedLeft={clickedLeft}\r\n          clickedRight={clickedRight}\r\n        />\r\n      )}\r\n      {viewUploader && (\r\n        <UploadImage\r\n          uploadProfile={uploadProfile}\r\n          setViewUploader={setViewUploader}\r\n          currentUser={currentUser}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}