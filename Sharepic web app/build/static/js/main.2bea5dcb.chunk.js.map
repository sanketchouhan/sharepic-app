{"version":3,"sources":["components/firebase.js","components/UserContext.js","components/home/Home.js","components/login-register/Login.js","components/login-register/Register.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","storage","UserContext","React","createContext","UserProvider","children","useState","currentUser","setCurrentUser","isInitialising","setIsInitialising","useEffect","onAuthStateChanged","authUser","collection","doc","uid","onSnapshot","data","_user","email","displayName","username","picUrl","id","style","width","height","position","top","background","display","alignItems","justifyContent","flexDirection","objectFit","src","alt","Provider","value","Home","setLoginModalOpen","setRegisterModalOpen","history","useHistory","useContext","push","className","onClick","Modal","setAppElement","Login","open","handleClose","setUsername","password","setPassword","error","setError","loading","setLoading","isOpen","onRequestClose","overlay","backgroundColor","content","left","right","bottom","transform","borderRadius","minHeight","padding","textAlign","placeItems","fontSize","type","name","onChange","e","target","placeholder","autoComplete","preventDefault","signInWithEmailAndPassword","then","res","catch","err","message","CircularProgress","size","color","Register","displayname","setDisplayname","createUserWithEmailAndPassword","creds","user","set","Posts","lazy","Profile","PrivateRoute","rest","render","location","to","pathname","state","from","App","anchorEl","setAnchorEl","loginModalOpen","registerModalOpen","Button","aria-controls","aria-haspopup","event","currentTarget","Avatar","Menu","keepMounted","Boolean","onClose","MenuItem","signOut","fallback","exact","path","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2bea5dcb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD2erL6u_VfdWn24yhKBAkgSlzu9qivEGs\",\r\n  authDomain: \"sharepic-app.firebaseapp.com\",\r\n  databaseURL: \"https://sharepic-app.firebaseio.com\",\r\n  projectId: \"sharepic-app\",\r\n  storageBucket: \"sharepic-app.appspot.com\",\r\n  messagingSenderId: \"859634332379\",\r\n  appId: \"1:859634332379:web:70abeb2890a8e84023d2fe\",\r\n  measurementId: \"G-8H8HT429GM\"\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n","import React, { useEffect } from \"react\";\r\nimport { auth, firestore } from \"./firebase\";\r\n\r\nexport const UserContext = React.createContext(null);\r\n\r\nfunction UserProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = React.useState(null);\r\n  const [isInitialising, setIsInitialising] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      setCurrentUser(authUser);\r\n      setIsInitialising(false);\r\n      if (authUser) {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(authUser.uid)\r\n          .onSnapshot((doc) => {\r\n            // console.log(\"snapshot ran\")\r\n            if (doc.data().uid) {\r\n              setCurrentUser(doc.data());\r\n            } else {\r\n              var _user = {\r\n                email: doc.data().email,\r\n                displayName: doc.data().username,\r\n                picUrl: doc.data().picUrl,\r\n                uid: doc.id,\r\n              };\r\n              setCurrentUser(_user);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }, [setCurrentUser]);\r\n\r\n  const divStyle = {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    background: \"#ececec\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  };\r\n  if (isInitialising) {\r\n    return (\r\n      <div style={divStyle}>\r\n        <img\r\n          width=\"300px\"\r\n          style={{ objectFit: \"contain\" }}\r\n          src=\"./images/logo.png\"\r\n          alt=\"logo\"\r\n        />\r\n        Loading...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default UserProvider;\r\n","import React, { useContext } from 'react'\r\nimport './Home.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from '../UserContext'\r\n\r\nfunction Home({ setLoginModalOpen, setRegisterModalOpen }) {\r\n\r\n    const history = useHistory();\r\n    const { currentUser } = useContext(UserContext);\r\n\r\n    if (currentUser) {\r\n        history.push('/posts');\r\n    }\r\n\r\n    return (\r\n        <div className=\"continue__tologin\">\r\n            <img src=\"images/logo.png\" alt=\"logo\" />\r\n            <h1>Welcome to SharePic</h1>\r\n            <h3>Login to continue</h3>\r\n            <h5 onClick={() => { setLoginModalOpen(true); setRegisterModalOpen(false) }}>Login</h5>\r\n            <h5 onClick={() => { setRegisterModalOpen(true); setLoginModalOpen(false) }}>Don't have an account? Create here</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './Login.css'\r\nimport Modal from 'react-modal';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport { auth } from '../../components/firebase';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction Login({ open, handleClose }) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [error, setError] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        setLoading(true)\r\n        auth.signInWithEmailAndPassword(username, password).then(res => {\r\n            setLoading(false)\r\n            history.push('/posts');\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            setError(err.message);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={open}\r\n            onRequestClose={handleClose}\r\n            style={{\r\n                overlay: {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.75)'\r\n                },\r\n                content: {\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    right: '0',\r\n                    bottom: '0',\r\n                    transform: 'translate(-50%,-50%)',\r\n                    borderRadius: '10px',\r\n                    width: '18rem',\r\n                    minHeight: '18rem',\r\n                    padding: '2rem 1rem',\r\n                    textAlign: 'center',\r\n                    display: 'grid',\r\n                    placeItems: 'center'\r\n                }\r\n            }}\r\n        >\r\n            <form className=\"login__form\">\r\n                <div className=\"close\" onClick={handleClose}><CloseRoundedIcon /></div>\r\n                <AccountCircleRoundedIcon fontSize=\"large\" />\r\n                <p className=\"modal__head\">Sign In</p>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Email\" autoComplete=\"off\" />\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n                <button type=\"submit\" onClick={handleSubmit}>\r\n                    {loading ?\r\n                        <CircularProgress size={20} color=\"inherit\" />\r\n                        :\r\n                        'Login'\r\n                    }\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react'\r\nimport './Register.css'\r\nimport Modal from 'react-modal';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport { auth, firestore } from '../../components/firebase';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction Register({ open, handleClose }) {\r\n\r\n    //   const { setCurrentUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [displayname, setDisplayname] = React.useState('');\r\n    const [error, setError] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        setError(null);\r\n        auth.createUserWithEmailAndPassword(username, password).then(creds => {\r\n            return firestore.collection('users').doc(creds.user.uid).set({\r\n                email: username,\r\n                displayName: displayname,\r\n                picUrl: 'images/avatar-default.png'\r\n            });\r\n        }).then(() => {\r\n            // console.log(\"reset form\")\r\n            setLoading(false)\r\n            history.push('/posts');\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            setError(err.message);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={open}\r\n            onRequestClose={handleClose}\r\n            style={{\r\n                overlay: {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.75)'\r\n                },\r\n                content: {\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    right: '0',\r\n                    bottom: '0',\r\n                    transform: 'translate(-50%,-50%)',\r\n                    borderRadius: '10px',\r\n                    width: '18rem',\r\n                    minHeight: '21rem',\r\n                    padding: '2rem 1rem',\r\n                    textAlign: 'center',\r\n                    display: 'grid',\r\n                    placeItems: 'center'\r\n                }\r\n            }}\r\n        >\r\n            <form className=\"register__form\">\r\n                <div className=\"close\" onClick={handleClose}><CloseRoundedIcon /></div>\r\n                <AccountCircleRoundedIcon fontSize=\"large\" />\r\n                <p className=\"modal__head\">Register</p>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Email\" autoComplete=\"off\" />\r\n                <input type=\"text\" name=\"displayname\" id=\"displayname\" value={displayname} onChange={(e) => setDisplayname(e.target.value)} placeholder=\"Display Name\" autoComplete=\"off\" />\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n                <button type=\"submit\" onClick={handleSubmit}>\r\n                    {loading ?\r\n                        <CircularProgress size={20} color=\"inherit\" />\r\n                        :\r\n                        'Register'\r\n                    }\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { Suspense, lazy, useContext } from 'react'\nimport './App.css';\n\n// components\n// import Posts from './components/posts/Posts';\nimport Home from './components/home/Home'\n// import Profile from './components/profile/Profile'\nimport Login from './components/login-register/Login';\nimport Register from './components/login-register/Register';\n\n// icons\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { UserContext } from './components/UserContext';\nimport { auth } from './components/firebase';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n// lasy loads\nconst Posts = React.lazy(() => import('./components/posts/Posts'));\nconst Profile = React.lazy(() => import('./components/profile/Profile'));\n\n\n// protected routes\nfunction PrivateRoute({ children, ...rest }) {\n\n  const { currentUser } = useContext(UserContext);\n  // const { isLoggedIn } = useContext(UserContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        currentUser ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction App() {\n\n  const history = useHistory();\n\n  const { currentUser } = useContext(UserContext);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [loginModalOpen, setLoginModalOpen] = React.useState(false);\n  const [registerModalOpen, setRegisterModalOpen] = React.useState(false);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleLogout = () => {\n    setAnchorEl(null);\n    auth.signOut();\n  }\n  const navigateToProfile = () => {\n    setAnchorEl(null);\n    history.push('/profile');\n  }\n\n  const divStyle = {\n    width: '100%',\n    height: '100vh',\n    position: 'fixed',\n    top: '0',\n    background: '#ececec',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  }\n\n\n  return (\n    <div className=\"app\">\n      <header>\n        <div className=\"header__contents\">\n          <img src=\"images/logo.png\" alt=\"logo\" />\n          <div className=\"buttons\">\n            {currentUser ?\n              <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <Avatar alt={currentUser.displayName} src={currentUser.picUrl} /><span className=\"header__username\">{currentUser.displayName}</span>\n              </Button>\n              :\n              <div className=\"login__register\">\n                <div className=\"login\" onClick={() => { setLoginModalOpen(true); setRegisterModalOpen(false) }}>\n                  Login <AccountBoxIcon color=\"action\" />\n                </div>\n                <Login open={loginModalOpen} handleClose={() => setLoginModalOpen(false)} />\n                <div className=\"register\" onClick={() => { setRegisterModalOpen(true); setLoginModalOpen(false) }}>\n                  Register <ExitToAppRoundedIcon color=\"action\" />\n                </div>\n                <Register open={registerModalOpen} handleClose={() => setRegisterModalOpen(false)} />\n              </div>\n            }\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={navigateToProfile}>Profile</MenuItem>\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n          </div>\n        </div>\n      </header>\n      <Suspense fallback={<div style={divStyle} >\n        <img width=\"300px\" style={{ objectFit: \"contain\" }} src=\"./images/logo.png\" alt=\"logo\" />\n            Loading...</div>}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home setLoginModalOpen={setLoginModalOpen} setRegisterModalOpen={setRegisterModalOpen} />\n          </Route>\n          <PrivateRoute exact path=\"/posts\">\n            <Posts />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/profile\">\n            <Profile />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport UserProvider from './components/UserContext';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <Router>\n        <App />\n      </Router>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}